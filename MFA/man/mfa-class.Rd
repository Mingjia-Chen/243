% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mfa.r
\docType{class}
\name{mfa-class}
\alias{mfa}
\alias{mfa-class}
\title{Class mfa}
\usage{
mfa(data, sets, ncomps = NULL, center = TRUE, scale = TRUE)
}
\arguments{
\item{data}{could be a numeric matrix or data.frame, should be in the same order of sets}

\item{sets}{list of vector contains vector of indices or variable names of each group}

\item{ncomps}{positive integer indicating how many number of components are to be extracted}

\item{center}{either a logical value or a numeric vector of length equal to the number of active variables in the analysis}

\item{scale}{either a logical value or a numeric vector of length equal to the number of active variables in the analysis}
}
\value{
an object of class \code{mfa} with the following elements:

\item{sets}{list of sets}

\item{weights}{vector of weights}

\item{eigenvalues}{vector of eigenvalues}

\item{common_factor_score}{matrix of common factor scores}

\item{partial_factor_score}{list of matrix of partial factor scores}

\item{loadings}{matrix of loadings}
}
\description{
Class \code{mfa} defines a mfa model

Creates an object of class \code{mfa}.
}
\details{
Constructor method of mfa Class.
}
\examples{
# default
test<-mfa(wine_data,sets=list(1:6,7:12,13:18,19:23,24:29,30:34,35:38,39:44,45:49,50:53))

# use your own scale method
#scale with vector
test<-mfa(wine_data,sets=list(1:6,7:12,13:18,19:23,24:29,30:34,35:38,39:44,45:49,50:53),
          center = apply(wine_data,2,mean),scale = apply(wine_data,2,sd))
# scale in advance
ndatas<-apply(wine_data,2,function(x){ (x-mean(x))/norm(x-mean(x),type="2")})
test<-mfa(ndatas,sets=list(1:6,7:12,13:18,19:23,24:29,30:34,35:38,39:44,45:49,50:53),center=FALSE,scale=FALSE)

# only print the first two components
ndatas<-apply(wine_data,2,function(x){ (x-mean(x))/norm(x-mean(x),type="2")})
test<-mfa(ndatas,sets=list(1:6,7:12,13:18,19:23,24:29,30:34,35:38,39:44,45:49,50:53),ncomp=2,center=FALSE,scale=FALSE)

# character sets
ndatas<-apply(wine_data,2,function(x){ (x-mean(x))/norm(x-mean(x),type="2")})
# Use the first and last variable names of each group:
test<-mfa(ndatas,sets=list(c("V1","V6"),c("V1.1","V8"),c("V1.2","V10"),c("V1.3","V8.1"),
                           c("V1.4","V12"),c("V1.5","V13"),c("V1.6","V4.6"),
                           c("V1.7","V5.1"),c("V1.8","V15"),c("V1.9","V4.9")
                           ),scale = F, center = F)
# or use the full list of variable names of each group:
test<-mfa(ndatas,sets=list(c("V1","V2","V3","V4","V5","V6"),
                           c("V1.1","V2.1","V3.1","V4.1","V7","V8"),
                           c("V1.2","V2.2","V3.2","V4.2","V9","V10"),
                           c("V1.3","V2.3","V3.3","V4.3","V8.1"),
                           c("V1.4","V2.4","V3.4","V4.4","V11","V12"),
                           c("V1.5","V2.5","V3.5","V4.5","V13"),
                           c("V1.6","V2.6","V3.6","V4.6"),
                           c("V1.7","V2.7","V3.7","V4.7","V14","V5.1"),
                           c("V1.8","V2.8","V3.8","V4.8","V15"),
                           c("V1.9","V2.9","V3.9","V4.9")
                           ),scale = F, center = F)
}

